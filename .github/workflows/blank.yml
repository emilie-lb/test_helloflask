# This is a basic workflow to help you get started with Actions

name: Python flask app workflow

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - name: Set up Python 3.6 environment
        uses: actions/setup-python@v2
        with:
          python-version: "3.6"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pdoc3
          pip install flake8
          pip install -r requirements.txt

      # # Check Python syntax errors or undefined names
      # # then exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
      #  - name: Lint with flake8
      #     run: |
      #       flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
      #       flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

      - name: Run test with unittest
        run: |
          python -m unittest

      - name: Auto generate pdoc
        run: |
          pdoc3 --html -o tmp back/
          rm -rf docs
          mkdir -p docs/
          mv tmp/back/* docs/
          rm -rf tmp/

      - name: Commit files
        run: |
          echo ${{ github.ref }}
          git add .
          git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git commit -m "CI: Automated build push" -a | exit 0

      - name: Push changes
        if: github.ref == 'refs/heads/main'
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
